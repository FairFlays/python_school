Задания на тему итераторы и генераторы:

1. Напишите функцию, которая принимает два аргумента: число (N) и количество знаков после запятой (t), и выводит список чисел от 1 до N в формате:
	Экспонента в степени 1: 2.718  # exp(1)
	Экспонента в степени 2: 7.389  # exp(2)
	...
	Экспонента в степени N: .....  # exp(N)

	Значение экспоненты необходимо вывести с заданной точностью (t).

2. Напишите функцию, которая принимает на вход строку и выдает словарь, ключи которого символы строки, а значения - количество раз, сколько этот символ в строке встречается
	Например: 
	>>> Hello World!
	{'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1, '!': 1}
	
	Символы в верхнем и нижнем регистре считать одинаковыми.

3. Представьте, что у вас есть ограниченное пространство оперативной памяти. Это значение задается пользователем. Необходимо написать выражение-генератор, для чтения файла
	P.S. Ограничение памяти означает, что вы не можете использовать больше памяти для чтения файла, чем задается пользователем 

4. Напишите функцию для поиска слова в строке, у которого минимальное значением кода 3-его символа. Тоже самое для поиска слова с максимальным значением кода 5-го символа слова.
	Задача - не использовать дополнительную память в виде списков и каких-либо других структур
	
5. Напишите функцию, которая запрашивает количество чисел Фибоначи, которое необходимо вывести и выводит их
	Задача - решение должно иметь минимальное потребление памяти

6. Напишите функцию создания 3-хмерного массива, элементы которого - сумма корней квадратного уравнения с коэффициентами a, b, c:
	ax^2 + bx + c = 0
	Для элемента матрицы M[1][2][1] a, b, c соответсвенно: 1, 2, 1
	Можно использовать функцию поиска корней из 1-го урока.
	Положим -5 <= a,b,c <= 5
	
7. 	Не используя интерпретатор, определить, что выведут следующий выражения:
	>>> '__iter__' in dir(list())
	>>> '__iter__' in dir(tuple)
	>>> '__iter__' in dir({})
	>>> '__iter__' in dict
	>>> '__iter__' in ''
	>>> '__iter__' in (x for x in range(5))
	>>> '__iter__' in dir(_)
	>>> '__iter__' in range(5)
	>>> '__iter__' in dir((x for x in range(3)))

8. Не используя интерпретатор, определить, что и почему выведут следующее выражение:
	>>> def func():
		while False:
			yield 'Something'
	
	>>> func() #  ???
	
9. Имеется очень большой файл (его размер больше, чем имеется оперативной памяти). Необходимо написать программу, которая будет выводить строки этого файла. 
	По мере достижения конца, она должна вернуться в начало и продолжить выводить строки.

10. Напишите реализацию функций map, zip, filter и chain

11. Проанализируйте время работы (вывести таблицу) следующих функций:
	- стандартная функция map, добавляющая 10 к каждому элементу списка
	- собственная функция map (из задания 9), добавляющая 10 к каждому элементу списка
	- выражение-генератор списка с добавлением 10 к каждому элементу
	- выражение-генератор (generator expression) с добавлением 10 к каждому элементу
	- функция-генератор с добавлением 10 к каждому элементу
	- функция-добавления 10 к каждому элементу

12. Напишите контекст менеджер с помощью генератора, для копирования содержимого одного файла, в другой

13. Реализуйте сопрограмму, получающую на вход адресс каталога в файловой системе и выводящая список всех файлов в этом каталоге.

14. Дан список числе. Необходимо найти максимальное и минимально числа, которые можно составить

15. Напишите функцию, которая выводит все простые числа до N (N вводится пользователем)